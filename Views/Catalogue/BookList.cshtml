@model List<Bookish.Models.BookModel>
@using Bookish.Controllers

@{
    ViewData["Title"] = "Books";
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(Model => Model[0].Id)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(Model => Model[0].Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]">@Html.DisplayNameFor(Model => Model[0].Author)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["GenreSortParm"]">@Html.DisplayNameFor(Model => Model[0].Genre)</a>
            </th>
            <th>
                @Html.DisplayNameFor(Model => Model[0].TotalCopies)
            </th>
            <th>
                @Html.DisplayNameFor(Model => Model[0].AvailableCopies)
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
    @foreach (var book in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => book.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => book.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => book.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => book.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => book.TotalCopies)
            </td>
            <td>
                @Html.DisplayFor(modelItem => book.AvailableCopies)
            </td>
            <td>
                <a asp-controller="Catalogue" asp-action="EditBook" asp-route-id="@book.Id">Edit</a>
                <a asp-action="Details" asp-route-id="@book.Id">Details</a>
            </td>
        </tr>
    }
    </tbody>
</table>
